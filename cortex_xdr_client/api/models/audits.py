from enum import Enum
from typing import Any, List, Optional, Union

from pydantic import BaseModel


class AuditEntity(str, Enum):
    """
    Entity of an audit.
    """
    LIVE_TERMINAL = "LIVE_TERMINAL"
    RULES = "RULES"
    RULES_EXCEPTIONS = "RULES_EXCEPTIONS"
    AUTH = "AUTH"
    RESPONSE = "RESPONSE"
    INCIDENT_MANAGEMENT = "INCIDENT_MANAGEMENT"
    ALERT_MANAGEMENT = "ALERT_MANAGEMENT"
    INCIDENT_TIMELINE_EVENT = "INCIDENT_TIMELINE_EVENT"
    ENDPOINT_MANAGEMENT = "ENDPOINT_MANAGEMENT"
    ENDPOINT_GROUPS = "ENDPOINT_GROUPS"
    ALERT_WHITELIST = "ALERT_WHITELIST"
    PUBLIC_API = "PUBLIC_API"
    DISTRIBUTIONS = "DISTRIBUTIONS"
    STARRED_INCIDENTS = "STARRED_INCIDENTS"
    POLICY_PROFILES = "POLICY_PROFILES"
    DEVICE_CONTROL_PROFILES = "DEVICE_CONTROL_PROFILES"
    DEVICE_CONTROL_POLICY = "DEVICE_CONTROL_POLICY"
    PROTECTION_PROFILES = "PROTECTION_PROFILES"
    DEVICE_CONTROL_PROFILE = "DEVICE_CONTROL_PROFILE"
    HOST_FIREWALL_PROFILE = "HOST_FIREWALL_PROFILE"
    HOST_DISK_ENCRYPTION_PROFILE = "HOST_DISK_ENCRYPTION_PROFILE"
    POLICY_RULES = "POLICY_RULES"
    PROTECTION_POLICY = "PROTECTION_POLICY"
    DEVICE_CONTROL_TEMP_EXCEPTIONS = "DEVICE_CONTROL_TEMP_EXCEPTIONS"
    DEVICE_CONTROL_GLOBAL_EXCEPTIONS = "DEVICE_CONTROL_GLOBAL_EXCEPTIONS"
    DEVICE_CONTROL_CUSTOM_DEVICE = "DEVICE_CONTROL_CUSTOM_DEVICE"
    GLOBAL_EXCEPTIONS = "GLOBAL_EXCEPTIONS"
    MSSP = "MSSP"
    REPORTING = "REPORTING"
    DASHBOARD = "DASHBOARD"
    BROKER_API = "BROKER_API"
    BROKER_VM = "BROKER_VM"
    MTH = "MTH"
    MDR = "MDR"
    ALERT_NOTIFICATIONS = "ALERT_NOTIFICATIONS"
    INTEGRATIONS = "INTEGRATIONS"
    QUERY = "QUERY"
    SCRIPT_EXECUTION = "SCRIPT_EXECUTION"
    ALERT_RULES = "ALERT_RULES"
    COLLECTION = "COLLECTION"
    API_KEY = "API_KEY"
    EDL = "EDL"
    VA_RESCAN_ENDPOINT = "VA_RESCAN_ENDPOINT"
    HI_RESCAN_ENDPOINT = "HI_RESCAN_ENDPOINT"
    REMEDIATION = "REMEDIATION"
    INGEST_DATA = "INGEST_DATA"
    LICENSING = "LICENSING"
    AGENT_CONFIGURATION = "AGENT_CONFIGURATION"
    PERMISSIONS = "PERMISSIONS"
    SCORING_RULES = "SCORING_RULES"
    LAYOUT_RULES = "LAYOUT_RULES"
    PLAYBOOK_TRIGGERS = "PLAYBOOK_TRIGGERS"
    FEATURED_ALERT_FIELDS = "FEATURED_ALERT_FIELDS"
    SYSTEM = "SYSTEM"
    TENANT_TAKEOVER = "TENANT_TAKEOVER"
    SCOUTER_POLICY = "SCOUTER_POLICY"
    SCOUTER_PROFILE = "SCOUTER_PROFILE"
    SCOUTER_GROUPS = "SCOUTER_GROUPS"
    ALLOWED_DOMAINS = "ALLOWED_DOMAINS"
    QUERY_LIBRARY = "QUERY_LIBRARY"
    TENANT_CONFIGURATION = "TENANT_CONFIGURATION"
    SCOUTER_CONFIGURATION = "SCOUTER_CONFIGURATION"
    HOST_FIREWALL = "HOST_FIREWALL"
    XIF = "XIF"
    XDM = "XDM"
    ACTION_CENTER = "ACTION_CENTER"
    XCLOUD_INTEGRATION = "XCLOUD_INTEGRATION"
    DATASETS = "DATASETS"
    XSOAR = "XSOAR"
    SECURITY_SETTINGS = "SECURITY_SETTINGS"
    ALERT_EXCLUSION = "ALERT_EXCLUSION"
    INDICATOR_RULES = "INDICATOR_RULES"
    EVENT_FORWARDING = "EVENT_FORWARDING"
    ASSET_INVENTORY = "ASSET_INVENTORY"
    SERVER_SETTINGS = "SERVER_SETTINGS"
    ASSET_ROLES = "ASSET_ROLES"
    CUSTOM_FIELDS = "CUSTOM_FIELDS"
    AUTOMATION_RULES = "AUTOMATION_RULES"
    AGENT_EXCEPTION_RULES = "AGENT_EXCEPTION_RULES"
    REMEDIATION_PATH_RULES = "REMEDIATION_PATH_RULES"


class AuditAdditionalInformation(BaseModel):
    endpoint_names: Optional[List[str]]
    endoint_count: Optional[int]


class Audit(BaseModel):
    AUDIT_ID: Union[int, None]
    AUDIT_OWNER_NAME: Union[str, None]
    AUDIT_OWNER_EMAIL: Union[str, None]
    AUDIT_ASSET_JSON: Union[str, None]
    AUDIT_ASSET_NAMES: Union[str, None]
    AUDIT_HOSTNAME: Union[str, None]
    AUDIT_RESULT: Union[str, None]
    AUDIT_REASON: Union[str, None]
    AUDIT_DESCRIPTION: Union[str, None]
    AUDIT_ENTITY: Union[AuditEntity, None]
    AUDIT_ENTITY_SUBTYPE: Union[str, None]
    AUDIT_SESSION_ID: Any
    AUDIT_CASE_ID: Union[int, None]
    AUDIT_INSERT_TIME: Union[int, None]
    AUDIT_SEVERITY: Union[str, None]
    AUDIT_LINK: Union[str, None]
    AUDIT_SOURCE_IP: Union[str, None]
    AUDIT_USER_AGENT: Union[str, None]
    AUDIT_USER_ROLES: Union[List[str], None]
    AUDIT_ADDITIONAL_INFORMATION: Union[AuditAdditionalInformation, None]


class GetAuditManagementLogsResponseItem(BaseModel):
    total_count: Optional[int]
    result_count: Optional[int]
    data: List[Audit]


class GetAuditManagementLogsResponse(BaseModel):
    reply: GetAuditManagementLogsResponseItem
